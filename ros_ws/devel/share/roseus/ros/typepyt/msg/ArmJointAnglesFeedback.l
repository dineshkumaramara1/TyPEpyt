;; Auto-generated. Do not edit!


(when (boundp 'typepyt::ArmJointAnglesFeedback)
  (if (not (find-package "TYPEPYT"))
    (make-package "TYPEPYT"))
  (shadow 'ArmJointAnglesFeedback (find-package "TYPEPYT")))
(unless (find-package "TYPEPYT::ARMJOINTANGLESFEEDBACK")
  (make-package "TYPEPYT::ARMJOINTANGLESFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude ArmJointAnglesFeedback.msg.html


(defclass typepyt::ArmJointAnglesFeedback
  :super ros::object
  :slots (_angles ))

(defmethod typepyt::ArmJointAnglesFeedback
  (:init
   (&key
    ((:angles __angles) (instance typepyt::JointAngles :init))
    )
   (send-super :init)
   (setq _angles __angles)
   self)
  (:angles
   (&rest __angles)
   (if (keywordp (car __angles))
       (send* _angles __angles)
     (progn
       (if __angles (setq _angles (car __angles)))
       _angles)))
  (:serialization-length
   ()
   (+
    ;; typepyt/JointAngles _angles
    (send _angles :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; typepyt/JointAngles _angles
       (send _angles :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; typepyt/JointAngles _angles
     (send _angles :deserialize buf ptr-) (incf ptr- (send _angles :serialization-length))
   ;;
   self)
  )

(setf (get typepyt::ArmJointAnglesFeedback :md5sum-) "2b177ebe4b350b7b614560d610addf92")
(setf (get typepyt::ArmJointAnglesFeedback :datatype-) "typepyt/ArmJointAnglesFeedback")
(setf (get typepyt::ArmJointAnglesFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Feedback
JointAngles angles


================================================================================
MSG: typepyt/JointAngles
float32 hip
float32 shoulder
float32 elbow
float32 wrist

")



(provide :typepyt/ArmJointAnglesFeedback "2b177ebe4b350b7b614560d610addf92")


